(ns phel-aa\generate-ascii-images
  (:require phel-aa\char-block))

(def output-directory (format "%s/../../material" __DIR__))

(if-not (php/is_dir output-directory)
  (php/mkdir output-directory))

(def chars (values (php-array-to-map (php/str_split "!\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~"))))

(def font-size 25)
(def width-offset 5)
(def height-offset 30)

(defn output-data-file [c im]
  (let [filename (format "%s/%s.json" output-directory (php/ord c))
        hist (map (fn [[x y]]
               (let [rgb (php/imagecolorat im x y)]
                 (char-block/get-rgb-average rgb)))
               (char-block/get-points))
        data {"char" c "hist" (to-php-array hist)}]
    (php/file_put_contents filename (php/json_encode (to-php-array data)))))

(defn output-char [c]
  (let [im (php/imagecreatetruecolor char-block/width char-block/height)
        white (php/imagecolorallocate im 255 255 255)
        black (php/imagecolorallocate im 0 0 0)
        font "/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc"
        filename (format "%s/%s.png" output-directory (php/ord c))]
    (php/imagefilledrectangle im 0 0 (dec char-block/width) (dec char-block/height) white)
    (php/imagettftext im font-size 0 width-offset height-offset black font c)
    (dofor [i :range [1 20]]
      (php/imagefilter im php/IMG_FILTER_GAUSSIAN_BLUR))
    (output-data-file c im)
    (php/imagepng im filename)
    (php/imagedestroy im)))

(loop [chars chars]
  (if-not (empty? chars)
    (let []
      (output-char (first chars))
      (recur (rest chars)))))
